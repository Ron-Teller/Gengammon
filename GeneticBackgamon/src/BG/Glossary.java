package BG;

public class Glossary {
	// This class contains all enums used in this game, to differentiate between different
	// type of objects and states.
	
	public static enum Side {Top, Bottom};   // Side of board, has top and bottom
	
	public static enum Color {
		// Color of opponents pieces
		White,
		Black,
		Empty;
		
		public Color opposite() {
			Color opposite = (this.equals(Color.White)) ? 
								Color.Black : Color.White;
			return opposite;
		}
	} 
	
	public static enum GameState {Not_Started, In_Progress, Ended};
	
	public static enum PlayerType {Human, AI, External, REPLAY}; //Human interacts with gui, AI moves 
							// generated by logic object, external communicates through file
	
	public static enum PlayerGameState {Advancing, Bearing, Bar}
	
	public static enum GameMode {FIFTY, SEVENTY_TWO, NORMAL, REPLAY}
	
	public static enum MovePositions
	{
	  Bar(-1),
	  Bearing(-2);
	  
	  private int index;

	  private MovePositions(int index) {
		  this.index = index;
	  }
	}
	
}
